a.

if (!("a" in window)) {
var a = 1;
}
alert(a);
// браузер выведет 1, т.к. переменная а отождествляется с методом объекта window, получает по умолчанию значение undefined 
// и внутри функции получает значение 1.

b.

var b = function a(x) {
x && a(--x);
};
alert(a);
// браузер выведет undefined, потому что в название функции-выражения может использоваться только внутри самой функции
// и при вызове alert значение а не определено
 
c.

function a(x) {
return x * 2;
}
var a;
alert(a);
// браузер выведет тело функции, т.к. при определении переменной а ей не присвоено никакого значения. Alert вызывает а без аргументов, 
// поэтому и будет выведено тело функции.

d.

function b(x, y, a) {
arguments[2] = 10;
alert(a);
}
b(1, 2, 3);
// браузер выведет 10, т.к. внутри функции значение с индексом 2 меняется на 10. В arguments содержится массив аргументов функции.

e. *

function a() {
alert(this);
}
a.call(null);

// браузер выведет window, т.к. в this присваивается значение объекта, вызвавшего функцию, т.е. window. При вызове метода объекта call 
// нам не важно в контексте какого объекта будет вызван данный метод, поэтому мы указывает null.